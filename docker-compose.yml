services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8070:8070"
#    depends_on:
#      - postgres
#      - broker
#    environment:
#      test_db-url: jdbc:postgres://postgres:5432/test_db
#      test_db-username: sa
#      test_db-password: password
#      rabbit_broker: broker
#    restart: unless-stopped
  broker:
    image: rabbitmq:3.13.1-management
    container_name: bb-rabbitmq
    restart: unless-stopped
    ports:
      - "15672:15672"
      - "5672:5672"
  postgres:
    image: postgres:14.7
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./sql/test_db:/docker-entrypoint-initdb.d
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=test_db
#  brt-db:
#    image: postgres:latest
#    container_name: postgres_brt
#    restart: unless-stopped
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./sql/init-1.sql:/docker-entrypoint-initdb.d
#      - ./BRT:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_USER=user1
#      - POSTGRES_PASSWORD=password1
#      - POSTGRES_DB=brt
#  hrs-db:
#      image: postgres:latest
#      container_name: postgres_hrs
#      restart: unless-stopped
#      ports:
#        - "5433:5432"
#      volumes:
#        - ./sql/hrs:/docker-entrypoint-initdb.d
#        - ./HRS:/var/lib/postgresql/data
#      environment:
#        - POSTGRES_USER=user2
#        - POSTGRES_PASSWORD=password2
#        - POSTGRES_DB=hrs
