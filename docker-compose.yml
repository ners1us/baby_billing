services:
  cdr-app:
    build:
      context: ./cdr_generator
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      cdr-db:
        condition: service_healthy
      broker:
        condition: service_healthy
    environment:
      test_db-url: jdbc:postgresql://cdr-db:5432/test_db
      test_db-username: sa
      test_db-password: password
      rabbit_broker: bb-rabbitmq

  brt-app:
    build:
      context: ./brt
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      brt-db:
        condition: service_healthy
      broker:
        condition: service_healthy
    environment:
      brt-url: jdbc:postgresql://brt-db:5432/brt
      brt-username: user1
      brt-password: password1
      rabbit_broker: bb-rabbitmq

  hrs-app:
    build:
      context: ./hrs
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8083:8083"
    depends_on:
      hrs-db:
        condition: service_healthy
      broker:
        condition: service_healthy
    environment:
      hrs-url: jdbc:postgresql://hrs-db:5432/hrs
      hrs-username: user2
      hrs-password: password2
      rabbit_broker: bb-rabbitmq

  cdr-db:
    image: postgres:latest
    container_name: postgres_cdr
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./cdr_generator/CDR:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=test_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sa" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s

  brt-db:
    image: postgres:latest
    container_name: postgres_brt
    restart: unless-stopped
    ports:
      - "5434:5432"
    volumes:
      - ./brt/BRT:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user1
      - POSTGRES_PASSWORD=password1
      - POSTGRES_DB=brt
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s

  hrs-db:
    image: postgres:latest
    container_name: postgres_hrs
    restart: unless-stopped
    ports:
      - "5435:5432"
    volumes:
      - ./hrs/HRS:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user2
      - POSTGRES_PASSWORD=password2
      - POSTGRES_DB=hrs
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user2" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s

  broker:
    image: rabbitmq:3.13.1-management
    container_name: bb-rabbitmq
    restart: unless-stopped
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s
